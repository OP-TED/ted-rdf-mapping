#--- s5_award_of_contract.rml.ttl ---
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix locn: <http://www.w3.org/ns/locn#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix tedm: <http://data.europa.eu/a4g/mapping/sf-rml/> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .
@prefix epd: <http://data.europa.eu/a4g/resource/> .
@prefix cpov: <http://data.europa.eu/m8g/> .
tedm:award_of_contract
  a owl:Ontology ;
  owl:imports dct:, <http://www.w3.org/2004/02/skos/core> ;
  dct:description """
        This module provides the mapping definitions for the ..."""@en ;
  rdfs:label "TED-SWS mapping of "@en ;
  dct:date "2022-05-11"^^xsd:date .

#tedm:PurchaseContract a rr:TripleMap ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:isWithinFrameworkAgreement;
#            rr:objectMap
#                [
#                    rml:reference "if(exists(AWARDED_TO_GROUP)) then 'true' else 'false'";
#                    rr:datatype xsd:boolean
#
#                ]
#        ] .
tedm:ContractOrganisationGroup a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasMember;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ContractOrganisation;
                    rr:joinCondition [
                        rr:parent "ancestor::AWARD_CONTRACT/@ITEM";
                        rr:child "ancestor::AWARD_CONTRACT/@ITEM";
                    ];
                ]
        ] .
tedm:Contract a rr:TripleMap ;
#    rr:predicateObjectMap
#    [
#        rr:predicate epo:signedBySignatory ;
#        rr:objectMap
#            [
#                rr:parentTriplesMap tedm:ContractSignatoryonContractorSide;
#                rr:joinCondition [
#                    rr:child "./@ITEM";
#                    rr:parent "ancestor::AWARD_CONTRACT/@ITEM";
#                ];
#            ] ;
#    ] ;
    rr:predicateObjectMap
    [
        rr:predicate epo:bindsBuyer ;
        rr:objectMap
            [
                rr:parentTriplesMap tedm:AdditionalBuyer;
            ] ;
    ] ;
    rr:predicateObjectMap
    [
        rr:predicate epo:bindsBuyer ;
        rr:objectMap
            [
                rr:parentTriplesMap tedm:AdditionalBuyerCP;
            ] ;
    ] ;
#    rr:predicateObjectMap
#    [
#        rr:predicate epo:bindsContractor ;
#        rr:objectMap
#            [
#                rr:parentTriplesMap tedm:ContractorRole;
#                rr:joinCondition [
#                    rr:child "./@ITEM";
#                    rr:parent "ancestor::AWARD_CONTRACT/@ITEM";
#                ];
#            ] ;
#    ] ;
    rr:predicateObjectMap
    [
        rr:predicate epo:bindsBuyer ;
        rr:objectMap
            [
                rr:parentTriplesMap tedm:Buyer;
            ] ;
    ] ;
    rr:predicateObjectMap
    [
        rr:predicate epo:bindsBuyer ;
        rr:objectMap
            [
                rr:parentTriplesMap tedm:BuyerCP;
            ] ;
    ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasID;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ContractIdentifier;
                    rr:joinCondition [
                        rr:parent "./@ITEM";
                        rr:child "./@ITEM";
                    ];
                ]
        ] ;

    rr:predicateObjectMap
        [
            rr:predicate epo:includesLot ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:Lot;
                    rr:joinCondition [
                        rr:parent "if (count(/TED_EXPORT/FORM_SECTION/F03_2014[1]/OBJECT_CONTRACT/OBJECT_DESCR)=1) then ./@ITEM else LOT_NO";
                        rr:child "if (count(/TED_EXPORT/FORM_SECTION/F03_2014[1]/OBJECT_CONTRACT/OBJECT_DESCR)=1) then 1 else LOT_NO";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate rdfs:comment ;
            rr:objectMap
                [
                    rml:reference "if(not(exists(LOT_NO)) and count(/TED_EXPORT/FORM_SECTION/F03_2014[1]/OBJECT_CONTRACT/OBJECT_DESCR)>1) then 'Erroneous XML data: this contract does not have a <LOT_NO> element' else null";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:includesLotAwardOutcome;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:LotAwardOutcome;
                    rr:joinCondition [
                        rr:parent "./@ITEM";
                        rr:child "./@ITEM";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasContractConclusionDate;
            rr:objectMap
                [
                    rml:reference "AWARDED_CONTRACT/DATE_CONCLUSION_CONTRACT";
                    rr:datatype xsd:date;
                ]
        ] .
tedm:ContractTerm a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasReservedExecution ;
            rr:objectMap
                [
                    rr:template "http://publications.europa.eu/resource/dataset/applicability"
                ] ;
        ] .
tedm:Lot a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasEstimatedValue;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:MonetaryValueLot;
                    rr:joinCondition [
                        rr:parent "if (count(/TED_EXPORT/FORM_SECTION/F03_2014[1]/OBJECT_CONTRACT/OBJECT_DESCR)=1) then 1 else LOT_NO";
                        rr:child "if (count(/TED_EXPORT/FORM_SECTION/F03_2014[1]/OBJECT_CONTRACT/OBJECT_DESCR)=1) then ./@ITEM else LOT_NO";
                    ];

                ] ;
        ] .

tedm:LotAwardOutcome a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:describesLot ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:Lot;
                    rr:joinCondition [
                        rr:parent "./@ITEM";
                        rr:child "./@ITEM";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:comprisesTenderAwardOutcome ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:TenderAwardOutcome;
                    rr:joinCondition [
                        rr:child "./@ITEM";
                        rr:parent "ancestor::AWARD_CONTRACT/@ITEM";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAdditionalNonAwardJustification;
            rr:objectMap
                [
                    rml:reference "NO_AWARDED_CONTRACT/PROCUREMENT_DISCONTINUED/NO_DOC_EXT/@PUBLICATION"
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAwardStatus;
            rr:objectMap
                [
                    rml:reference "if(exists(NO_AWARDED_CONTRACT)) then 'http://publications.europa.eu/resource/authority/winner-selection-status/clos-nw' else if(exists(AWARDED_CONTRACT)) then 'http://publications.europa.eu/resource/authority/winner-selection-status/selec-w' else null";
                    rr:termType rr:IRI;
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasNonAwardJustification;
            rr:objectMap
                [
                    rml:reference "if(exists(NO_AWARDED_CONTRACT/PROCUREMENT_UNSUCCESSFUL)) then 'http://publications.europa.eu/resource/authority/non-award-justification/all-rej' else if(exists(NO_AWARDED_CONTRACT/PROCUREMENT_DISCONTINUED)) then 'http://publications.europa.eu/resource/authority/non-award-justification/other' else null";
                    rr:termType rr:IRI;
                ]
        ] .
tedm:ContractIdentifier a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasIdentifierValue;
            rr:objectMap
                [
                    rml:reference "CONTRACT_NO"
                ]
        ] .

tedm:TenderRole a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:playedBy ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ContractOrganisation;
                   rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                ];
                ] ;
        ] .
tedm:WinnerRole a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:playedBy ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ContractOrganisation;
                   rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:playedByBusiness;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:Business;
                   rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                ];
                ] ;
        ] .
tedm:Business a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasBusinessSize ;
                rr:objectMap
                [
                    rml:reference "if(exists(SME)) then 'true' else 'false'";
                    rr:datatype xsd:boolean

                ]

        ] .
#tedm:ContractSignatoryonContractorSide a rr:TripleMap ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:playedBy ;
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:ContractOrganisation;
#                   rr:joinCondition [
#                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
#                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
#                ];
#                ] ;
#        ] .
#tedm:ContractorRole a rr:TripleMap ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:playedBy ;
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:ContractOrganisation;
#                   rr:joinCondition [
#                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
#                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
#                ];
#                ] ;
#        ] .

tedm:ContractOrganisation a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasPrimaryContactPoint ;
            rr:objectMap
            [
                rr:parentTriplesMap tedm:ContractContactPoint;
                rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                ];
            ] ;
        ] ;
    rr:predicateObjectMap
    [
        rr:predicate epo:hasRegisteredAddress ;
        rr:objectMap
            [
                rr:parentTriplesMap tedm:ContractOrganisationAddress;
                rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                ];
            ] ;
    ] ;

    rr:predicateObjectMap
        [
            rr:predicate epo:hasID;
            rr:objectMap
            [
                rr:parentTriplesMap tedm:ContractOrganisationIdentifier;
                rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                ];
            ] ;
        ] .
tedm:ContractOrganisationIdentifier a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/NATIONALID"
                ] ;
        ] .
tedm:ContractContactPoint a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate cpov:email ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/E_MAIL"
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasInternetAddress ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/URL";
                    #-rr:termType rr:IRI;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasFax ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/FAX"
                ]
        ] ;

    rr:predicateObjectMap
        [
            rr:predicate cpov:telephone ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/PHONE"
                ]
        ] .
tedm:ContractOrganisationAddress a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate locn:postName ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/TOWN"
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate locn:thoroughfare ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/ADDRESS"
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate locn:postCode ;
            rr:objectMap
                [
                    rml:reference "ADDRESS_CONTRACTOR/POSTAL_CODE"
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasNutsCode ;
#            rr:objectMap
#                [
#                    rml:reference "if (not(exists(ADDRESS_CONTRACTOR/*:NUTS/@CODE))) then 'http://data.europa.eu/nuts/OP_DATPRO' else null";
#                    rr:termType rr:IRI;
#                ]
#
#        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasNutsCode;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:nuts;
                    rr:joinCondition [
                        rr:child "ADDRESS_CONTRACTOR/*:NUTS/@CODE";
                        rr:parent "code.value";
                    ];
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasCountryCode ;
#            rr:objectMap
#                [
#                    rml:reference "if (not(exists(ADDRESS_CONTRACTOR/COUNTRY/@VALUE))) then 'http://publications.europa.eu/resource/authority/country/OP_DATPRO' else null";
#                    rr:termType rr:IRI;
#                ]
#
#        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasCountryCode ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:country;
                    rr:joinCondition [
                        rr:child "ADDRESS_CONTRACTOR/COUNTRY/@VALUE";
                        rr:parent "code.value";
                    ];
                ] ;
        ] .
tedm:TenderAwardOutcome a rr:TripleMap ;
        rr:predicateObjectMap
        [
            rr:predicate epo:describesTender ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:Tender;
                    rr:joinCondition [
                        rr:child "ancestor::AWARD_CONTRACT/@ITEM";
                        rr:parent "ancestor::AWARD_CONTRACT/@ITEM";
                    ];
                ] ;
        ] ;
        rr:predicateObjectMap
        [
            rr:predicate epo:awardsLotToWinner ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:WinnerRole;
                    rr:joinCondition [
                        rr:child "ancestor::AWARD_CONTRACT/@ITEM";
                        rr:parent "ancestor::AWARD_CONTRACT/@ITEM";
                    ];
                ] ;
        ] .

tedm:Tender a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasFinnancialOfferValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:TenderMonetaryValue;
                                        rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                        ];
                ] ;
        ] ;

    rr:predicateObjectMap
        [
            rr:predicate epo:isSubmittedForLot ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:Lot;
                    rr:joinCondition [
                        rr:child "ancestor::AWARD_CONTRACT/@ITEM";
                        rr:parent "./@ITEM";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:foreseesSubcontracting ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:SubcontractingEstimate;
                    rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                        ];
                ] ;
        ] .
tedm:SubcontractingEstimate a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasSubcontractingEstimatedValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:SubcontractingEstimatedValueMonetaryValue;
                   rr:joinCondition [
                    rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasEstimatedPercentage ;
            rr:objectMap
                [
                    rml:reference "PCT_SUBCONTRACTING";
                    rr:datatype xsd:decimal
                ] ;
        ] .
tedm:SubcontractingEstimatedValueMonetaryValue a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "VAL_SUBCONTRACTING";
                    rr:datatype xsd:decimal
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasCurrency ;
#            rr:objectMap
#                [
#                    rml:reference "if (not(exists(VAL_SUBCONTRACTING/@CURRENCY))) then 'http://publications.europa.eu/resource/authority/currency/OP_DATPRO' else null";
#                    rr:termType rr:IRI;
#                ]
#
#        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasCurrency ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:currency;
                    rr:joinCondition [
                        rr:child "VAL_SUBCONTRACTING/@CURRENCY";
                        rr:parent "code.value";
                    ];
                ] ;
        ] .
tedm:TenderMonetaryValue a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "VALUES/VAL_TOTAL";
                    rr:datatype xsd:decimal
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasCurrency ;
#            rr:objectMap
#                [
#                    rml:reference "if (not(exists(VALUES/VAL_TOTAL/@CURRENCY))) then 'http://publications.europa.eu/resource/authority/currency/OP_DATPRO' else null";
#                    rr:termType rr:IRI;
#                ]
#
#        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasCurrency ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:currency;
                    rr:joinCondition [
                        rr:child "VALUES/VAL_TOTAL/@CURRENCY";
                        rr:parent "code.value";
                    ];
                ] ;
        ] .
tedm:MonetaryValueLot a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "VALUES/VAL_ESTIMATED_TOTAL";
                    rr:datatype xsd:decimal
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasCurrency ;
#            rr:objectMap
#                [
#                    rml:reference "if (not(exists(VAL_ESTIMATED_TOTAL/@CURRENCY))) then 'http://publications.europa.eu/resource/authority/currency/OP_DATPRO' else null";
#                    rr:termType rr:IRI;
#                ]
#
#        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasCurrency ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:currency;
                    rr:joinCondition [
                        rr:child "VALUES/VAL_ESTIMATED_TOTAL/@CURRENCY";
                        rr:parent "code.value";
                    ];
                ] ;
        ] .

tedm:SubmissionStatisticalInformation a rr:TripleMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasReceivedTenders;
            rr:objectMap
                [
                    rml:reference "TENDERS/NB_TENDERS_RECEIVED";
                    rr:datatype xsd:integer;
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasReceivedSMETenders;
            rr:objectMap
                [
                    rml:reference "TENDERS/NB_TENDERS_RECEIVED_SME";
                    rr:datatype xsd:integer
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasReceivedNonEUTenders;
            rr:objectMap
                [
                    rml:reference "TENDERS/NB_TENDERS_RECEIVED_NON_EU";
                    rr:datatype xsd:integer
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasElectronicTenders;
            rr:objectMap
                [
                    rml:reference "TENDERS/NB_TENDERS_RECEIVED_EMEANS";
                    rr:datatype xsd:integer
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasLowestReceivedTenderValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:MonetaryValueSubmissionLowest;
                    rr:joinCondition [
                        rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                        rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasHighestReceivedTenderValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:MonetaryValueSubmissionHighest;
                    rr:joinCondition [
                        rr:child "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                        rr:parent "unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasEUReceivedTenders;
            rr:objectMap
                [
                    rml:reference "TENDERS/NB_TENDERS_RECEIVED_OTHER_EU";
                    rr:datatype xsd:integer
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:concernsSubmissionsForLot ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:Lot;
                    rr:joinCondition [
                        rr:parent "if (count(/TED_EXPORT/FORM_SECTION/F03_2014[1]/OBJECT_CONTRACT/OBJECT_DESCR)=1) then ./@ITEM else LOT_NO";
                        rr:child "if (count(/TED_EXPORT/FORM_SECTION/F03_2014[1]/OBJECT_CONTRACT/OBJECT_DESCR)=1) then 1 else LOT_NO";
                    ];
                ] ;
        ] .
tedm:MonetaryValueSubmissionHighest a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "VALUES/VAL_RANGE_TOTAL/HIGH";
                    rr:datatype xsd:decimal
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasCurrency ;
#            rr:objectMap
#                [
#                    rml:reference "if (not(exists(//VAL_SUBCONTRACTING[1]/@CURRENCY))) then 'http://publications.europa.eu/resource/authority/currency/OP_DATPRO' else null";
#                    rr:termType rr:IRI;
#                ]
#
#        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasCurrency ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:currency;
                    rr:joinCondition [
                        rr:child "VALUES/VAL_RANGE_TOTAL/@CURRENCY";
                        rr:parent "code.value";
                    ];
                ] ;
        ] .
tedm:MonetaryValueSubmissionLowest a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "VALUES/VAL_RANGE_TOTAL/LOW";
                    rr:datatype xsd:decimal
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasCurrency ;
#            rr:objectMap
#                [
#                    rml:reference "if (not(exists(//VAL_SUBCONTRACTING[1]/@CURRENCY))) then 'http://publications.europa.eu/resource/authority/currency/OP_DATPRO' else null";
#                    rr:termType rr:IRI;
#                ]
#
#        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasCurrency ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:currency;
                    rr:joinCondition [
                        rr:child "VALUES/VAL_RANGE_TOTAL/@CURRENCY";
                        rr:parent "code.value";
                    ];
                ] ;
        ] .