#--- s6_complementary_information.rml.ttl ---
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix tedm: <http://data.europa.eu/a4g/mapping/sf-rml/> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .

tedm:confidentiality
  a owl:Ontology ;
  owl:imports dct:, <http://www.w3.org/2004/02/skos/core> ;
  dct:description """
        This module provides the mapping definitions for the ..."""@en ;
  rdfs:label "TED-SWS mapping of "@en ;
  dct:date "2022-07-26"^^xsd:date .

tedm:PublicationProvision a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:describesNotice ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:Notice
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasElementConfidentiality ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ElementConfidentialityDescription
                ] ;
        ] .
tedm:ElementConfidentialityDescription a rr:TriplesMap ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasPredicateReference;
            rr:objectMap
                [
                    rml:reference "if(exists(xpath)) then 'IRI predicate' else null";
                    #--rr:termType rr:IRI;
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasClassReference;
            rr:objectMap
                [
                    rml:reference "if(exists(AWARD_CONTRACT/AGREE_TO_PUBLICATION_MAN/@PUBLICATION)) then 'IRI predicate' else null";
                    #--rr:termType rr:IRI;
                ]
# Removing ary reference to ContractorOrganizationGroup as per GH issue #245
#        ] ;
#    rr:predicateObjectMap
#        [
#            rr:predicate epo:hasClassReference;
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:ContractorOrganisationGroup;
#                    rr:joinCondition [
#                        rr:child "'true'";
#                        rr:parent "if (exists()) then 'true' else null";
#                    ];
#                ]
        ] .
