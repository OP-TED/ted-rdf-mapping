#--- technical_mapping_F03.rml.ttl ---
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix locn: <http://www.w3.org/ns/locn#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix tedm: <http://data.europa.eu/a4g/mapping/sf-rml/> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .
@prefix epo-not: <http://data.europa.eu/a4g/ontology#>.
@prefix epd: <http://data.europa.eu/a4g/resource/> .
@prefix cv: <http://data.europa.eu/m8g/> .
@prefix cccev: <http://data.europa.eu/m8g/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix cpov: <http://data.europa.eu/m8g/> .
@prefix	foaf: <http://xmlns.com/foaf/0.1/> .

@prefix ext: <urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2#> .
@prefix cbc: <urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2#> .
@prefix efext: <http://data.europa.eu/p27/eforms-ubl-extensions/1#> .
@prefix efbc: <http://data.europa.eu/p27/eforms-ubl-extension-basic-components/1#> .
@prefix efac: <http://data.europa.eu/p27/eforms-ubl-extension-aggregate-components/1#> .
@prefix cac: <urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2#> .
@prefix xsi: <http://www.w3.org/2001/XMLSchema-instance#> .

# copy into the mapping_suite_f03, this file and all the imports.
tedm:technical_mapping_f03
  a owl:Ontology ;
  #owl:imports 	tedm:contracting_authority, tedm:object, tedm:procedure, tedm:award_of_contract, tedm:complementary_information, tedm:annexe_d1, tedm:notice;
  dct:description "This module provides the mapping definitions for the eForm subtype 16 form"@en ;
  rdfs:label "TED-SWS mapping of eForm subtype 16"@en ;
  dct:date "2023-02-15"^^xsd:date .


tedm:ND-Root a rr:TriplesMap ;
    rdfs:label "ND-Root";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Notice" ;
            rr:class epo:Notice
        ] ;
    rr:predicateObjectMap
        [
            rdfs:comment "The notice refers to a Buyer role";
            rdfs:label "ND-ContractingParty";
            rr:predicate epo:announcesRole ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ContractingParty
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "OPP-090-Procedure";
            rdfs:comment "The identifier of a notice";
            rr:predicate epo:refersToPrevious ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PreviousNotice_ND-ServiceProvider;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .
#    rr:predicateObjectMap
#        [
#            rdfs:label   "ND-LotPreviousPlanning";
#            rr:predicate epo:refersToPrevious ;
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:PlanningNotice;
#                    rr:joinCondition [
#                        rr:child "path(.)";
#                        rr:parent "path(../../../.)";
#                    ];
#                ]
#        ] .

tedm:PreviousNotice_ND-ServiceProvider a rr:TriplesMap ;
    rdfs:label "Previous Notice for ND-ServiceProvider";
    rdfs:comment "This triples map refers to the previous notice that a notice mught be associated to.";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(., ' ', '-' ), '/' , '-')}_PreviousNotice" ;
            rr:class epo:Notice
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "OPP-090-Procedure";
            rdfs:comment "The identifier of a notice";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PreviousNoticeIdentifier;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ]
        ] .

tedm:PreviousNoticeIdentifier a rr:TriplesMap ;
    rdfs:label "OPP-090-Procedure";
    rdfs:comment "The identifier of a notice";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_NoticeIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] .

#ND-ContractingParty
tedm:ND-ContractingParty a rr:TriplesMap ;
    rdfs:label "ND-ContractingParty";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ContractingParty";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Buyer_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:Buyer
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-508-Procedure";
            rr:predicate   epo:hasBuyerProfile ;
            rr:objectMap
                [
                    rml:reference "cbc:BuyerProfileURI";
                    rr:datatype xsd:anyURI
                ] ;
        ] .
#    rr:predicateObjectMap
#        [
#            rdfs:comment "The buyer role is played by an organization";
#            rdfs:label "ND-ServiceProvider";
#            rr:predicate epo:playedBy ;
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:ND-ProviderParty
#                ] ;
#        ] .

#ND-ServiceProvider
tedm:ND-ServiceProvider a rr:TriplesMap ;
    rdfs:label "ND-ServiceProvider";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ContractingParty/cac:Party";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_BuyerOrganization_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class org:Organization
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-11-Procedure-Buyer";
            rr:predicate epo:hasBuyerLegalType ;
            rr:objectMap
                [
                    rml:reference "../cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']";
                ] ;
#this is how it was done in the standard forms but I think that we need to look at it in an other manner in the eForms
#as in the eForm we have the buyer leagl type in the xml
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:buyerLegalType;
#                    rr:joinCondition [
#                        rr:child "../cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']";
#                        rr:parent "xmlElement";
#                    ];
#                ] ;
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-10-Procedure-Buyer";
            rr:predicate   epo:hasMainActivity ;
            rr:objectMap
                [
                    rml:reference "../cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "OPT-300-Procedure";
            rdfs:comment "The identifier of a buyer organization";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:BuyerOrganizationIdentifier;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .

tedm:BuyerOrganizationIdentifier a rr:TriplesMap ;
    rdfs:label "OPT-300-Procedure";
    rdfs:comment "The identifier of a buyer organization";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ContractingParty/cac:Party/cac:PartyIdentification";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ProcurementProjectIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] .

tedm:buyerLegalType a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "transformation/resources/buyer_legal_type.csv" ;
            rml:referenceFormulation ql:CSV
        ] ;
    rr:subjectMap
        [
            rml:reference
                "conceptURI" ;
        ] .


#ND-ProcedureTenderingProcess
tedm:ND-ProcedureTenderingProcess a rr:TriplesMap ;
    rdfs:label "ND-ProcedureTenderingProcess";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ProcedureProcess_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:Procedure

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-634-Procedure";
            rr:predicate   epo:isToBeRelaunched ;
            rr:objectMap
                [
                    rml:reference "descendant::efbc:ProcedureRelaunchIndicator";
                    rr:datatype xsd:boolean
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-88-Procedure";
            rr:predicate   epo:hasMainFeature ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-105-Procedure";
            rr:predicate   epo:hasProcedureType  ;
            rr:objectMap
                [
                    rml:reference "cbc:ProcedureCode";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-01-notice and BT-01(e)-notice and BT-01(f)-notice";
            rr:predicate  epo:hasLegalBasis  ;
            rr:objectMap
                [
                    rml:reference "if(exists(/*/cbc:RegulatoryDomain) or exists(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:ID[text()='LocalLegalBasis']) or exists(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:DocumentDescription)) then concat(/*/cbc:RegulatoryDomain, ' ',concat(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:ID[text()='LocalLegalBasis'], ' ', cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:DocumentDescription)) else null";
                    rr:datatype xsd:string
                ] ;
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-01-notice and BT-01(c)-notice and BT-01(d)-notice";
            rr:predicate  epo:hasLegalBasis  ;
            rr:objectMap
                [
                    rml:reference "if(exists(/*/cbc:RegulatoryDomain) or exists(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:ID[not(text()=('CrossBorderLaw','LocalLegalBasis'))]) or exists(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:DocumentDescription)) then concat(/*/cbc:RegulatoryDomain, ' ',concat(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:ID[not(text()=('CrossBorderLaw','LocalLegalBasis'))], ' ', cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:DocumentDescription)) else null";
                    rr:datatype xsd:string
                ] ;
        ] .


#ND-ProcedureTenderingProcess
tedm:ND-AcceleratedProcedure a rr:TriplesMap ;
    rdfs:label "ND-AcceleratedProcedure";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure']";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ProcedureProcess_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:Procedure

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-106-Procedure";
            rr:predicate   epo:isAccelerated  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:ProcessReasonCode[@listName='accelerated-procedure']";
                    rr:datatype xsd:boolean
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-1351-Procedure";
            rr:predicate   epo:hasAcceleratedProcedureJustification  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:ProcessReason";
                    rr:datatype xsd:string
                ] ;
        ]   .