#--- technical_mapping_F03.rml.ttl ---
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix locn: <http://www.w3.org/ns/locn#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix tedm: <http://data.europa.eu/a4g/mapping/sf-rml/> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .
@prefix epo-not: <http://data.europa.eu/a4g/ontology#>.
@prefix epd: <http://data.europa.eu/a4g/resource/> .
@prefix cv: <http://data.europa.eu/m8g/> .
@prefix cccev: <http://data.europa.eu/m8g/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix cpov: <http://data.europa.eu/m8g/> .
@prefix	foaf: <http://xmlns.com/foaf/0.1/> .

@prefix ext: <urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2#> .
@prefix cbc: <urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2#> .
@prefix efext: <http://data.europa.eu/p27/eforms-ubl-extensions/1#> .
@prefix efbc: <http://data.europa.eu/p27/eforms-ubl-extension-basic-components/1#> .
@prefix efac: <http://data.europa.eu/p27/eforms-ubl-extension-aggregate-components/1#> .
@prefix cac: <urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2#> .
@prefix xsi: <http://www.w3.org/2001/XMLSchema-instance#> .

# copy into the mapping_suite_f03, this file and all the imports.
tedm:technical_mapping_f03
  a owl:Ontology ;
  #owl:imports 	tedm:contracting_authority, tedm:object, tedm:procedure, tedm:award_of_contract, tedm:complementary_information, tedm:annexe_d1, tedm:notice;
  dct:description "This module provides the mapping definitions for the eForm subtype 16 form"@en ;
  rdfs:label "TED-SWS mapping of eForm subtype 16"@en ;
  dct:date "2023-02-15"^^xsd:date .


tedm:ND-Root a rr:TriplesMap ;
    rdfs:label "ND-Root";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Notice" ;
            rr:class epo:Notice
        ] ;
    rr:predicateObjectMap
        [
            rdfs:comment "The notice refers to a Buyer role";
            rdfs:label "ND-ContractingParty";
            rr:predicate epo:announcesRole ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ContractingParty
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "OPP-090-Procedure";
            rdfs:comment "The identifier of a notice";
            rr:predicate epo:refersToPrevious ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PreviousNotice_ND-ServiceProvider;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .
#    rr:predicateObjectMap
#        [
#            rdfs:label   "ND-LotPreviousPlanning";
#            rr:predicate epo:refersToPrevious ;
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:PlanningNotice;
#                    rr:joinCondition [
#                        rr:child "path(.)";
#                        rr:parent "path(../../../.)";
#                    ];
#                ]
#        ] .

tedm:PreviousNotice_ND-ServiceProvider a rr:TriplesMap ;
    rdfs:label "Previous Notice for ND-ServiceProvider";
    rdfs:comment "This triples map refers to the previous notice that a notice mught be associated to.";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(., ' ', '-' ), '/' , '-')}_PreviousNotice" ;
            rr:class epo:Notice
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "OPP-090-Procedure";
            rdfs:comment "The identifier of a notice";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PreviousNoticeIdentifier;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ]
        ] .

tedm:PreviousNoticeIdentifier a rr:TriplesMap ;
    rdfs:label "OPP-090-Procedure";
    rdfs:comment "The identifier of a notice";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_NoticeIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] .

#ND-ContractingParty
tedm:ND-ContractingParty a rr:TriplesMap ;
    rdfs:label "ND-ContractingParty";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ContractingParty";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Buyer_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:Buyer
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-508-Procedure";
            rr:predicate   epo:hasBuyerProfile ;
            rr:objectMap
                [
                    rml:reference "cbc:BuyerProfileURI";
                    rr:datatype xsd:anyURI
                ] ;
        ] .
#    rr:predicateObjectMap
#        [
#            rdfs:comment "The buyer role is played by an organization";
#            rdfs:label "ND-ServiceProvider";
#            rr:predicate epo:playedBy ;
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:ND-ProviderParty
#                ] ;
#        ] .

#ND-ServiceProvider
tedm:ND-ServiceProvider a rr:TriplesMap ;
    rdfs:label "ND-ServiceProvider";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ContractingParty/cac:Party";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_BuyerOrganization_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class org:Organization
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-11-Procedure-Buyer";
            rr:predicate epo:hasBuyerLegalType ;
            rr:objectMap
                [
                    rml:reference "../cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']";
                ] ;
#this is how it was done in the standard forms but I think that we need to look at it in an other manner in the eForms
#as in the eForm we have the buyer leagl type in the xml
#            rr:objectMap
#                [
#                    rr:parentTriplesMap tedm:buyerLegalType;
#                    rr:joinCondition [
#                        rr:child "../cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']";
#                        rr:parent "xmlElement";
#                    ];
#                ] ;
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-10-Procedure-Buyer";
            rr:predicate   epo:hasMainActivity ;
            rr:objectMap
                [
                    rml:reference "../cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "OPT-300-Procedure";
            rdfs:comment "The identifier of a buyer organization";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:BuyerOrganizationIdentifier;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .

tedm:BuyerOrganizationIdentifier a rr:TriplesMap ;
    rdfs:label "OPT-300-Procedure";
    rdfs:comment "The identifier of a buyer organization";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ContractingParty/cac:Party/cac:PartyIdentification";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ProcurementProjectIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] .


#ND-ProcedureTenderingProcess
tedm:ND-ProcedureTenderingProcess a rr:TriplesMap ;
    rdfs:label "ND-ProcedureTenderingProcess";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            #This one maps to the parent path
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Procedure_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path(..)) || '?response_type=raw')}" ;
            rr:class epo:Procedure

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-634-Procedure";
            rr:predicate   epo:isToBeRelaunched ;
            rr:objectMap
                [
                    rml:reference "descendant::efbc:ProcedureRelaunchIndicator";
                    rr:datatype xsd:boolean
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-88-Procedure";
            rr:predicate   epo:hasMainFeature ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-105-Procedure";
            rr:predicate   epo:hasProcedureType  ;
            rr:objectMap
                [
                    rml:reference "cbc:ProcedureCode";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-01-notice and BT-01(e)-notice and BT-01(f)-notice";
            rr:predicate  epo:hasLegalBasis  ;
            rr:objectMap
                [
                    rml:reference "if(exists(/*/cbc:RegulatoryDomain) or exists(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:ID[text()='LocalLegalBasis']) or exists(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:DocumentDescription)) then concat(/*/cbc:RegulatoryDomain, ' ',concat(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:ID[text()='LocalLegalBasis'], ' ', cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:DocumentDescription)) else null";
                    rr:datatype xsd:string
                ] ;
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-01-notice and BT-01(c)-notice and BT-01(d)-notice";
            rr:predicate  epo:hasLegalBasis  ;
            rr:objectMap
                [
                    rml:reference "if(exists(/*/cbc:RegulatoryDomain) or exists(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:ID[not(text()=('CrossBorderLaw','LocalLegalBasis'))]) or exists(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:DocumentDescription)) then concat(/*/cbc:RegulatoryDomain, ' ',concat(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:ID[not(text()=('CrossBorderLaw','LocalLegalBasis'))], ' ', cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:DocumentDescription)) else null";
                    rr:datatype xsd:string
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-106-Procedure";
            rr:predicate   epo:isAccelerated  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:ProcessReasonCode[@listName='accelerated-procedure']";
                    rr:datatype xsd:boolean
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-1351-Procedure";
            rr:predicate   epo:hasAcceleratedProcedureJustification  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:ProcessReason";
                    rr:datatype xsd:string
                ] ;
        ]   ;
    rr:predicateObjectMap
        [
            rdfs:label "ProcedureTerm";
            rdfs:comment "This is the ProcedureTerm that is associated with a Procedure";
            rr:predicate epo:isSubjectToProcedureSpecificTerm ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ProcedureTerms;
                    rr:joinCondition [
                        rr:child "path(/*/cac:TenderingTerms)";
                        rr:parent "path(.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-ExclusionGrounds";
            rr:predicate epo:specifiesExclusionGround ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ExclusionGrounds;
                    rr:joinCondition [
                        rr:child "path(..)";
                        rr:parent "path(../../..)";
                    ];
                ]
        ].


#ND-ProcedureTerms
tedm:ND-ProcedureTerms a rr:TriplesMap ;
    rdfs:label "ND-ProcedureTerms";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingTerms";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ProcedureTerms_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:ProcedureTerm
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-31-Procedure";
            rr:predicate  epo:hasMaximumLotSubmissionAllowed  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:MaximumLotsSubmittedNumeric";
                    rr:datatype xsd:integer
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-33-Procedure";
            rr:predicate  epo:hasMaximumNumberOfLotsToBeAwarded  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:MaximumLotsAwardedNumeric";
                    rr:datatype xsd:integer
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-01-notice and BT-01(c)-notice and BT-01(d)-notice";
#            rr:predicate  epo:hasLegalBasis  ;
#            rr:objectMap
#                [
#                    rml:reference "if(exists(/*/cbc:RegulatoryDomain) or exists(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:ID[not(text()=('CrossBorderLaw','LocalLegalBasis'))]) or exists(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:DocumentDescription)) then concat(/*/cbc:RegulatoryDomain, ' ',concat(cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:ID[not(text()=('CrossBorderLaw','LocalLegalBasis'))], ' ', cac:ProcurementLegislationDocumentReference[not(cbc:ID/text()=('CrossBorderLaw','LocalLegalBasis'))]/cbc:DocumentDescription)) else null";
#                    rr:datatype xsd:string
#                ] ;
#        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-01-notice and BT-01(e)-notice and BT-01(f)-notice";
#            rr:predicate  epo:hasLegalBasis  ;
#            rr:objectMap
#                [
#                    rml:reference "if(exists(/*/cbc:RegulatoryDomain) or exists(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:ID[text()='LocalLegalBasis']) or exists(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:DocumentDescription)) then concat(/*/cbc:RegulatoryDomain, ' ',concat(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:ID[text()='LocalLegalBasis'], ' ', cac:ProcurementLegislationDocumentReference[cbc:ID/text()='LocalLegalBasis']/cbc:DocumentDescription)) else null";
#                    rr:datatype xsd:string
#                ] ;
#        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-09(a)-Procedure and BT-09(b)-Procedure";
            rr:predicate  epo:hasCrossBorderLaw  ;
            rr:objectMap
                [
                    rml:reference "if(exists(cac:ProcurementLegislationDocumentReference[cbc:ID/text()='CrossBorderLaw']/cbc:ID[text()='CrossBorderLaw'])) then cac:ProcurementLegislationDocumentReference[cbc:ID/text()='CrossBorderLaw'] else null";
                    rr:datatype xsd:string
                ] ;
        ] .

#ND-ExclusionGrounds
tedm:ND-ExclusionGrounds a rr:TriplesMap ;
    rdfs:label "ND-ExclusionGrounds";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingTerms/cac:TendererQualificationRequest/cac:SpecificTendererRequirement";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ExtensionGroup_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:ExclusionGround

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-67(a)-Procedure";
            rr:predicate  cccev:type  ;
            rr:objectMap
                [
                    rml:reference "cbc:TendererRequirementTypeCode[@listName='exclusion-ground']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-67(b)-Procedure";
            rr:predicate  cccev:descrition  ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string
                ] ;
        ] .



#ND-ProcedureProcurementScope
tedm:ND-ProcedureProcurementScope a rr:TriplesMap ;
    rdfs:label "ND-ProcedureProcurementScope";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProject";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            #This one maps to the parent path
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Procedure_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path(..)) || '?response_type=raw')}" ;
            rr:class epo:Procedure

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-300-Procedure";
            rr:predicate  epo:hasAdditionalInformation;
            rr:objectMap
                [
                    rml:reference "cbc:Note";
                    rr:datatype xsd:string
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-21-Procedure";
            rr:predicate  epo:hasTitle;
            rr:objectMap
                [
                    rml:reference "cbc:Name";
                    rr:datatype xsd:string
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-24-Procedure";
            rr:predicate  epo:hasDescription;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string
                ] ;
        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-26(a)-Procedure and BT-263-Procedure";
#            rr:predicate epo:hasAdditionalClassification  ;
#            rr:objectMap
#                [
#                    rml:reference "if(exists(descendant::cbc:ItemClassificationCode) and exists(descendant::cbc:ItemClassificationCode/@listName)) then concat(cbc:ItemClassificationCode, ':', cbc:ItemClassificationCode/@listName) else null";
#                ] ;
#        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-26(m)-Procedure and BT-262-Procedure";
#            rr:predicate epo:hasMainClassification  ;
#            rr:objectMap
#                [
#                    rml:reference "if(exists(descendant::cbc:ItemClassificationCode) and exists(descendant::cbc:ItemClassificationCode/@listName)) then concat(cbc:ItemClassificationCode, ':', cbc:ItemClassificationCode/@listName) else null";
#                ] ;
#        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-22-Procedure";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ProcurementProjectIdentifier;
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:foreseesContractSpecificTerm ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ProcedurePlacePerformanceAdditionalInformation;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-27-Procedure";
            rr:predicate epo:hasEstimatedValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ProcedureValueEstimate;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .

tedm:ND-ProcedureValueEstimate a rr:TriplesMap ;
    rdfs:label "ND-ProcedureValueEstimate";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProject/cac:RequestedTenderTotal";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ProcurementProjectMonetaryValue_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:MonetaryValue
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-27-Procedure";
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "cbc:EstimatedOverallContractAmount";
                ] ;
        ] .

tedm:ProcurementProjectIdentifier a rr:TriplesMap ;
    rdfs:label "BT-22-Procedure";
    rdfs:comment "The identifier of a procurement project";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProject";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ProcurementProjectIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] .

tedm:ND-ProcedurePlacePerformanceAdditionalInformation a rr:TriplesMap ;
    rdfs:label "ND-ProcedurePlacePerformanceAdditionalInformation";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProject/cac:RealizedLocation";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ProcurementProjectContractTerm_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:ContractTerm
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:definesSpecificPlaceOfPerformance ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ProcurementProjectContractLocation;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-727-Procedure";
            rr:predicate epo:hasBroadPlaceOfPerformance ;
            rr:objectMap
                [
                    rml:reference "cac:Address/cbc:Region";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-728-Procedure";
            rr:predicate epo:hasPlaceOfPerformanceAdditionalInformation ;
            rr:objectMap
                [
                    rml:reference "cac:Address/cbc:Description";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-531-Procedure";
            rr:predicate  epo:hasAdditionalContractNature;
            rr:objectMap
                [
                    rml:reference "../cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-23-Procedure";
            rr:predicate  epo:hasContractNatureType;
            rr:objectMap
                [
                    rml:reference "../cbc:ProcurementTypeCode";
                ] ;
        ] .


tedm:ProcurementProjectContractLocation a rr:TriplesMap ;
    rdfs:comment "This is an iterator for the location it has the same xpath with the ND-ProcedurePlacePerformanceAdditionalInformation as this one goes through the ContractTerm";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProject/cac:RealizedLocation";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ProcurementProjectContractLocation_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class dct:Location
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate locn:address ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ProcedurePlacePerformance;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .

tedm:ND-ProcedurePlacePerformance a rr:TriplesMap ;
    rdfs:label "ND-ProcedurePlacePerformance";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:StreetName) or exists(cbc:AdditionalStreetName) or exists(cac:AddressLine/cbc:Line) or exists(cbc:CityName) or exists(cbc:PostalZone)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ProcurementProjectContractAddress_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class locn:Address
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5101(a)-Lot";
            rr:predicate locn:fullAddress ;
            rr:objectMap
                [
                    rml:reference "cbc:StreetName";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5101(b)-Lot";
            rr:predicate locn:adminUnitL2 ;
            rr:objectMap
                [
                    rml:reference "cbc:AdditionalStreetName";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5101(c)-Lot";
            rr:predicate locn:thoroughfare ;
            rr:objectMap
                [
                    rml:reference "cac:AddressLine/cbc:Line";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5131-Procedure";
            rr:predicate locn:postName ;
            rr:objectMap
                [
                    rml:reference "cbc:CityName";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5071-Lot";
            rr:predicate epo:hasNutsCode  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:nuts;
                    rr:joinCondition [
                        rr:child "descendant::cbc:CountrySubentityCode";
                        rr:parent "code.value";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5121-Procedure";
            rr:predicate locn:postCode ;
            rr:objectMap
                [
                    rml:reference "cbc:PostalZone";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5141-Lot";
            rr:predicate epo:hasCountryCode  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:country;
                    rr:joinCondition [
                        rr:child "cbc:IdentificationCode";
                        rr:parent "code.value";
                    ];
                ] ;
        ].

##################################################################################################################################################################################################
##################################################################################################################################################################################################
##################################################################################################################################################################################################
#ND-Organization
tedm:ND-Organization a rr:TriplesMap ;
    rdfs:label "ND-Organization";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Buyer_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:Buyer
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-Company";
            rr:predicate epo:playedBy ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-Company;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-633-Organization";
            rr:predicate foaf:name ;
            rr:objectMap
                [
                    rml:reference "descendant::efbc:NaturalPersonIndicator"
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-TouchPoint";
            rr:predicate epo:playedBy ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-TouchPoint;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .

#ND-Company
tedm:ND-Company a rr:TriplesMap ;
    rdfs:label "ND-Company";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Company_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class org:Organization

        ];
    rr:predicateObjectMap
        [
            rr:predicate epo:hasPrimaryContactPoint ;
            rr:objectMap
                [
                    rdfs:label "ND-CompanyContact";
                    rr:parentTriplesMap tedm:ND-CompanyContact ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            #The channel of ND-Company it is created for the BT-509-Organization-Company it does not correspond to a node"
            rr:predicate epo:hasDeliveryGateway ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-CompanyChannel ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate cv:registeredAddress ;
            rr:objectMap
                [
                    rdfs:label "ND-CompanyAddress";
                    rr:parentTriplesMap tedm:ND-CompanyAddress;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ];
    rr:predicateObjectMap
        [
            rdfs:label "BT-500-Organization-Company";
            rr:predicate epo:hasLegalName ;
            rr:objectMap
                [
                    rml:reference "cac:PartyName/cbc:Name"
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-16-Organization-TouchPoint";
            rr:predicate epo:hasOrganisationUnit ;
            rr:objectMap
                [
                    rml:reference "cbc:Department";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            #The identifier of the company"
            rr:predicate epo:hasID;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:CompanyIdentifier;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] .

tedm:CompanyIdentifier a rr:TriplesMap ;
    rdfs:comment "BT-501-Organization-Company and OPT-200-Organization-Company";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyLegalEntity";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:CompanyID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_OrganisationIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-501-Organization-Company and OPT-200-Organization-Company";
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:CompanyID";
                ] ;
        ] .

tedm:ND-CompanyContact   a rr:TriplesMap ;
    rdfs:label "ND-CompanyContact";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:Contact" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if(exists(cbc:Name) or exists(cbc:ElectronicMail) or exists(cbc:Telephone) or exists(cbc:Telefax)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_CompanyContactPoint_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class cpov:ContactPoint

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-502-Organization-Company";
            rr:predicate epo:hasContactName  ;
            rr:objectMap
                [
                    rml:reference "cbc:Name";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-506-Organization-Company";
            rr:predicate cpov:email  ;
            rr:objectMap
                [
                    rml:reference "cbc:ElectronicMail";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-503-Organization-Company";
            rr:predicate cpov:telephone  ;
            rr:objectMap
                [
                    rml:reference "cbc:Telephone";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-739-Organization-Company";
            rr:predicate epo:hasFax  ;
            rr:objectMap
                [
                    rml:reference "cbc:Telefax";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-505-Organization-Company";
            rr:predicate epo:hasInternetAddress  ;
            rr:objectMap
                [
                    rml:reference "../efac:Company/cbc:WebsiteURI";
                    rr:datatype xsd:anyURI;
                ] ;
        ].

#This is a triplesmap for the channel of a ND-Company it does not exist as a node but I had to recreate it for the BT-509-Organization-Company
tedm:ND-CompanyChannel a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if(exists(cbc:EndpointID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_CompanyChannel_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null";
            rr:class cv:Channel
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-509-Organization-Company";
            rr:predicate epo:hasEndpoint;
            rr:objectMap
                [
                    rml:reference "cbc:EndpointID";
                    rr:datatype xsd:anyURI;
                ]
        ] .

tedm:ND-CompanyAddress  a rr:TriplesMap ;
    rdfs:label "ND-CompanyAddress";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PostalAddress" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_CompanyAddress_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class locn:Address

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-510(a)-Organization-Company";
            rr:predicate locn:fullAddress ;
            rr:objectMap
                [
                    rml:reference "cbc:StreetName";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-510(b)-Organization-Company";
            rr:predicate locn:adminUnitL2 ;
            rr:objectMap
                [
                    rml:reference "cbc:AdditionalStreetName";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-510(c)-Organization-Company";
            rr:predicate locn:thoroughfare ;
            rr:objectMap
                [
                    rml:reference "cac:AddressLine/cbc:Line";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-513-Organization-Company";
            rr:predicate locn:addressArea ;
            rr:objectMap
                [
                    rml:reference "cbc:CityName";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-512-Organization-Company";
            rr:predicate locn:postCode  ;
            rr:objectMap
                [
                    rml:reference "cbc:PostalZone";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-507-Organization-Company";
            rr:predicate epo:hasNutsCode  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:nuts;
                    rr:joinCondition [
                        rr:child "cbc:CountrySubentityCode";
                        rr:parent "code.value";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-514-Organization-Company";
            rr:predicate epo:hasCountryCode  ;
            rr:objectMap
                [
                    rml:reference "'http://publications.europa.eu/resource/authority/country/' || cac:Country/cbc:IdentificationCode";
                    rr:termType rr:IRI;
                ] ;
        ] .
##################################################################################################################################################################################################
##################################################################################################################################################################################################
##################################################################################################################################################################################################
#ND-TouchPoint
tedm:ND-TouchPoint a rr:TriplesMap ;
    rdfs:label "ND-TouchPoint";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_TouchPoint_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class org:Organization

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-500-Organization-TouchPoint";
            rr:predicate epo:hasLegalName ;
            rr:objectMap
                [
                    rml:reference "cac:PartyName/cbc:Name"
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-16-Organization-TouchPoint";
            rr:predicate epo:hasOrganisationUnit ;
            rr:objectMap
                [
                    rml:reference "cbc:Department";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    #The identifier of a ND-TouchPoint
                    rr:parentTriplesMap tedm:ND-TouchPointIdentifier;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasDeliveryGateway ;
            rr:objectMap
                [
                    #The channel of ND-Company it is created for the BT-509-Organization-Company it does not correspond to a node
                    rr:parentTriplesMap tedm:ND-TouchPointChannel ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];

                ];
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasPrimaryContactPoint ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-TouchpointContact ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate cv:registeredAddress ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-TouchpointAddress;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ]
        ].


#ND-TouchpointContact
tedm:ND-TouchpointContact   a rr:TriplesMap ;
    rdfs:label "ND-TouchpointContact";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:Contact" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if(exists(cbc:Name) or exists(cbc:ElectronicMail) or exists(cbc:Telephone) or exists(cbc:Telefax)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_TouchPointContact_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class cpov:ContactPoint

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-502-Organization-TouchPoint";
            rr:predicate epo:hasContactName  ;
            rr:objectMap
                [
                    rml:reference "cbc:Name";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-506-Organization-TouchPoint";
            rr:predicate cpov:email  ;
            rr:objectMap
                [
                    rml:reference "cbc:ElectronicMail";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-503-Organization-TouchPoint";
            rr:predicate cpov:telephone  ;
            rr:objectMap
                [
                    rml:reference "cbc:Telephone";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-739-Organization-TouchPoint";
            rr:predicate epo:hasFax  ;
            rr:objectMap
                [
                    rml:reference "cbc:Telefax";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-505-Organization-TouchPoint";
            rr:predicate epo:hasInternetAddress  ;
            rr:objectMap
                [
                    rml:reference "../efac:TouchPoint/cbc:WebsiteURI";
                    rr:datatype xsd:anyURI;
                ] ;
        ].

#The identifier of a touch point
tedm:ND-TouchPointIdentifier a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_TouchPointIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "OPT-201-Organization-TouchPoint";
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] .

#This is a triplesmap for the channel of a ND-TouchPoint it does not exist as a node but I had to recreate it for the BT-509-Organization-Company
tedm:ND-TouchPointChannel a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if(exists(cbc:EndpointID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_TouchPointChannel_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null";
            rr:class cv:Channel
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-509-Organization-TouchPoint";
            rr:predicate epo:hasEndpoint;
            rr:objectMap
                [
                    rml:reference "cbc:EndpointID";
                    rr:datatype xsd:anyURI;
                ]
        ] .

tedm:ND-TouchpointAddress  a rr:TriplesMap ;
    rdfs:label "ND-TouchpointAddress";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PostalAddress" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_TouchPointAddress_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class locn:Address

        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-510(a)-Organization-TouchPoint";
            rr:predicate locn:fullAddress ;
            rr:objectMap
                [
                    rml:reference "cbc:StreetName";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-510(b)-Organization-TouchPoint";
            rr:predicate locn:adminUnitL2 ;
            rr:objectMap
                [
                    rml:reference "cbc:AdditionalStreetName";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-510(c)-Organization-TouchPoint";
            rr:predicate locn:thoroughfare ;
            rr:objectMap
                [
                    rml:reference "cac:AddressLine/cbc:Line";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-513-Organization-TouchPoint";
            rr:predicate locn:postName ;
            rr:objectMap
                [
                    rml:reference "cbc:CityName";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-512-Organization-TouchPoint";
            rr:predicate locn:postCode  ;
            rr:objectMap
                [
                    rml:reference "cbc:PostalZone";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-507-Organization-TouchPoint";
            rr:predicate epo:hasNutsCode  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:nuts;
                    rr:joinCondition [
                        rr:child "cbc:CountrySubentityCode";
                        rr:parent "code.value";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-514-Organization-TouchPoint";
            rr:predicate epo:hasCountryCode  ;
            rr:objectMap
                [
                    rml:reference "'http://publications.europa.eu/resource/authority/country/' || cac:Country/cbc:IdentificationCode";
                    rr:termType rr:IRI;
                ] ;
        ] .

##################################################################################################################################################################################################
##################################################################################################################################################################################################
##################################################################################################################################################################################################
#ND-LotsGroup
tedm:ND-LotsGroup  a rr:TriplesMap ;
    rdfs:label "ND-LotsGroup";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_LotGroup_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path(..)) || '?response_type=raw')}" ;
            rr:class epo:LotGroup
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-137-LotsGroup";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PurposeLotIdentifier ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-300-LotsGroup";
            rr:predicate epo:hasAdditionalInformation ;
            rr:objectMap
                [
                    rml:reference "cac:ProcurementProject/cbc:Note";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-21-LotsGroup";
            rr:predicate epo:hasTitle ;
            rr:objectMap
                [
                    rml:reference "cac:ProcurementProject/cbc:Name";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-24-LotsGroup";
            rr:predicate epo:hasDescription ;
            rr:objectMap
                [
                    rml:reference "cac:ProcurementProject/cbc:Description";
                    rr:datatype xsd:string;
                ] ;
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-27-LotsGroup";
            rr:predicate epo:hasRestatedEstimatedValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PurposeLotGroupEstimatedValue ;
                    rr:joinCondition [
                        rr:child "path(../cac:ProcurementProject/cac:RequestedTenderTotal)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ]   ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-726-LotsGroup";
            rr:predicate epo:isSMESuitable ;
            rr:objectMap
                [
                    rml:reference "cac:ProcurementProject/cbc:SMESuitableIndicator";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-271-LotsGroup";
            rr:predicate epo:hasFrameworkAgreementMaximumValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotsGroupValueEstimateExtension ;
                    rr:joinCondition [
                        rr:child "path(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:ProcurementProject/cac:RequestedTenderTotal/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ];
    rr:predicateObjectMap
        [
            rdfs:label "BT-157-LotsGroup";
            rr:predicate epo:hasEstimatedValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotsGroupFA ;
                    rr:joinCondition [
                        rr:child "path(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingProcess/cac:FrameworkAgreement)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ].

tedm:ND-LotsGroupFA  a rr:TriplesMap ;
    rdfs:label "BT-157-LotsGroup";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingProcess/cac:FrameworkAgreement" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:EstimatedMaximumValueAmount)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ND-LotsGroupFA_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:MonetaryValue
        ] ;
   rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "cbc:EstimatedMaximumValueAmount";
                    rr:datatype xsd:decimal;
                ] ;
        ] .

tedm:PurposeLotGroupEstimatedValue  a rr:TriplesMap ;
    rdfs:label "BT-27-LotsGroup";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:ProcurementProject/cac:RequestedTenderTotal" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:EstimatedOverallContractAmount)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_PurposeLotGroupEstimatedValue_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:MonetaryValue
        ] ;
   rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "cbc:EstimatedOverallContractAmount";
                    rr:datatype xsd:decimal;
                ] ;
        ] .

#ND-LotsGroupValueEstimateExtension
tedm:ND-LotsGroupValueEstimateExtension  a rr:TriplesMap ;
    rdfs:label "BT-271-LotsGroup";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:ProcurementProject/cac:RequestedTenderTotal/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if (exists(efbc:FrameworkMaximumAmount)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_LotsGroupValueEstimateExtension_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:MonetaryValue
        ] ;
   rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "efbc:FrameworkMaximumAmount";
                    rr:datatype xsd:decimal;
                ] ;
        ] .

tedm:PurposeLotIdentifier a rr:TriplesMap ;
    rdfs:label "BT-137-LotsGroup";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_PurposeLotIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                    rr:datatype xsd:string;
                ] ;
        ] .

#ND-LotDistribution
tedm:ND-LotDistribution  a rr:TriplesMap ;
    rdfs:label "ND-LotDistribution";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_LotGroup_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path(/*)) || '?response_type=raw')}" ;
            rr:class epo:LotGroup
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-330-Procedure";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:GroupIdentifier ;
                    rr:joinCondition [
                        rr:child "path(cbc:LotsGroupID)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-1375-Procedure";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:LotGroupIdentifier ;
                    rr:joinCondition [
                        rr:child "path(..)";
                        rr:parent "path(../..)";
                    ];
                ] ;
        ].

tedm:LotGroupIdentifier a rr:TriplesMap ;
    rdfs:label "BT-1375-Procedure";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup/cac:ProcurementProjectLotReference";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID[@schemeName='Lot'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_LotGroupIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID[@schemeName='Lot']";
                    rr:datatype xsd:string;
                ] ;
        ] .

tedm:GroupIdentifier a rr:TriplesMap ;
    rdfs:label "BT-330-Procedure";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:LotsGroupID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_GroupIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:LotsGroupID";
                    rr:datatype xsd:string;
                ] ;
        ] .


#ND-LotsGroupAwardCriteria
tedm:ND-LotsGroupAwardCriteria  a rr:TriplesMap ;
    rdfs:label "ND-LotsGroupAwardCriteria";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_LotsGroupAwardCriteria_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:AwardCriterion
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-539-LotsGroup";
            rr:predicate epo:hasAwardCriterionType ;
            rr:objectMap
                [
                    rml:reference "cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-539-LotsGroup";
            rr:predicate cccev:description ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-734-LotsGroup";
            rr:predicate cccev:name ;
            rr:objectMap
                [
                    rml:reference "cbc:Name";

                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-541-LotsGroup";
            rr:predicate epo:hasFixedValue ;
            rr:objectMap
                [
                    rml:reference "ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric";

                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5421-LotsGroup";
            rr:predicate cccev:weight ;
            rr:objectMap
                [
                    rml:reference "ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterCode[@listName='number-weight']";

                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5422-LotsGroup";
            rr:predicate epo:hasFixedValueType ;
            rr:objectMap
                [
                    rml:reference "ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterCode[@listName='number-fixed']";

                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5423-LotsGroup";
            rr:predicate epo:hasConstraint ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotsGroupAwardCriteriaConstraint ;
                    rr:joinCondition [
                        rr:child "path(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ] .

tedm:ND-LotsGroupAwardCriteriaConstraint  a rr:TriplesMap ;
    rdfs:comment "Intermediate class for BT-5423-LotsGroup";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rml:reference "if (exists(efbc:ParameterCode[@listName='number-threshold'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_LotsGroupAwardCriteriaConstraint_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class cccev:Constraint
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasThresholdValue ;
            rr:objectMap
                [
                    rml:reference "efbc:ParameterCode[@listName='number-threshold']";
                ] ;
        ] .

#ND-Changes
tedm:ND-Changes  a rr:TriplesMap ;
    rdfs:label "ND-Changes";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Changes_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:ElementChangeDescription
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-140-notice";
            rr:predicate epo:hasChangeJustification ;
            rr:objectMap
                [
                    rml:reference "efac:ChangeReason/cbc:ReasonCode";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-762-notice";
            rr:predicate epo:hasChangeReasonDescription ;
            rr:objectMap
                [
                    rml:reference "efac:ChangeReason/efbc:ReasonDescription";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-758-notice";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ChangesIdentifier ;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-13716-notice";
            rr:predicate epo:hasPreviousVersionOfElementReference ;
            rr:objectMap
                [
                    rml:reference "efac:Change/efbc:ChangedSectionIdentifier";
                    rr:datatype xsd:anyURI;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-141(a)-notice";
            rr:predicate epo:hasChangeDescription ;
            rr:objectMap
                [
                    rml:reference "efac:Change/efbc:ChangeDescription";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-718-notice";
            rr:predicate epo:isProcurementDocumentChanged ;
            rr:objectMap
                [
                    rml:reference "efac:Change/efbc:ProcurementDocumentsChangeIndicator";
                    rr:datatype xsd:boolean;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-719-notice";
            rr:predicate epo:hasProcurementDocumentChangeDate ;
            rr:objectMap
                [
                    rml:reference "efac:Change/efbc:ProcurementDocumentsChangeDate";
                    rr:datatype xsd:date;
                ] ;
        ] .

tedm:ND-ChangesIdentifier a rr:TriplesMap ;
    rdfs:comment "The identifier of a change notice";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(efbc:ChangedNoticeIdentifier)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ChangesIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-758-notice";
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "efbc:ChangedNoticeIdentifier";
                    rr:datatype xsd:string;
                ] ;
        ] .
##################################################################################################################################################################################################
##################################################################################################################################################################################################
##################################################################################################################################################################################################
#ND-LotPreviousPlanning
tedm:ND-LotPreviousPlanning a rr:TriplesMap ;
    rdfs:label "ND-LotProcurementScope";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_LotPreviousPlanning_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo-not:PlanningNotice
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-125(i)-Lot";
            rdfs:comment "The identifier of a planning notice";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PlanningNoticeIdentifier ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-1251-Lot";
            rr:predicate epo-not:announcesPlannedProcurementPart ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PlannedProcurementPart ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ] .

#Planned Procurement Part
tedm:PlannedProcurementPart a rr:TriplesMap ;
    rdfs:label "BT-1251-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_PlannedProcurementPart_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:PlannedProcurementPart
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-1251-Lot";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:PlannedProcurementPartIdentifier ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ] .

#Planned Procurement Part Identifier
tedm:PlannedProcurementPartIdentifier a rr:TriplesMap ;
    rdfs:label "BT-1251-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ReferencedDocumentInternalAddress)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_PlannedProcurementPartIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-1251-Lot";
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ReferencedDocumentInternalAddress";
                ] ;
        ] .

#Planning Notice Identifier
tedm:PlanningNoticeIdentifier a rr:TriplesMap ;
    rdfs:label "BT-125(i)-Lot";
    rdfs:comment "The identifier of a planning notice";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:NoticeDocumentReference";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_PlanningNoticeIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-125(i)-Lot";
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] .


#ND-Lot
tedm:ND-Lot a rr:TriplesMap ;
    rdfs:label "ND-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Lot_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:Lot
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-137-Lot";
            rr:predicate epo:hasID ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-Lot ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ] ;
        ]   ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-726-Lot";
            rr:predicate epo:isSMESuitable ;
            rr:objectMap
                [
                    rml:reference "cbc:SMESuitableIndicator";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-774-Lot";
            rr:predicate epo:fulfillsStrategicProcurement ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotAdditionalClassification_Green_Procurement ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-775-Lot";
            rr:predicate epo:fulfillsStrategicProcurement ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotAdditionalClassification_Social_Procurement ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-776-Lot";
            rr:predicate epo:fulfillsStrategicProcurement ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotAdditionalClassification_Innovative_Procurement ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../.)";
                    ];
                ] ;
        ]   ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-21-Lot";
            rr:predicate epo:hasTitle  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:Name";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-24-Lot";
            rr:predicate epo:hasDescription  ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:Description";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-115-Lot";
            rr:predicate epo:isCoveredByGPA  ;
            rr:objectMap
                [
                    rml:reference "cac:TenderingProcess/cbc:GovernmentAgreementConstraintIndicator";
                    rr:datatype xsd:boolean
                ] ;
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasPurpose ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotProcurementScope_Lot_Purpose ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-27-Lot";
            rr:predicate epo:hasRestatedEstimatedValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotProcurementScope_Monetary_Value_Purpose ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-OptionsAndRenewals";
            rr:predicate epo:foreseesContractSpecificTerm ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotProcurementScope_Contract_Extension ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-AuctionTerms";
            rr:predicate epo:usesTechnique ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-AuctionTerms ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-60-Lot";
            rr:predicate epo:isUsingEUFunds  ;
            rr:objectMap
                [
                    rml:reference "cac:TenderingTerms/cbc:FundingProgramCode[@listName='eu-funded']";
                    rr:datatype xsd:boolean
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-FA";
            rr:predicate epo:isSubjectToProcedureSpecificTerm ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-FA ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../.)";
                    ];
                ] ;
        ];
    rr:predicateObjectMap
        [
            rdfs:label "ND-ReviewPresentationPeriod";
            rr:predicate epo:isSubjectToLotSpecificTerm ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-ReviewPresentationPeriod ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../..)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:comment "ND-LotTenderingTerms_FrameworkAgreementTechniqueUsage";
            rr:predicate epo:usesTechnique ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotTenderingTerms_FrameworkAgreementTechniqueUsage ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:comment "ND-LotTenderingTerms_DynamicPurchaseSystemTechniqueUsage";
            rr:predicate epo:usesTechnique ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotTenderingTerms_DynamicPurchaseSystemTechniqueUsage ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-300-Lot";
            rr:predicate epo:hasAdditionalInformation  ;
            rr:objectMap
                [
                    rml:reference "cac:ProcurementProject/cbc:Note";
                    rr:datatype xsd:string
                ] ;
        ] .


#Lot Identifier
tedm:LotIdentifier a rr:TriplesMap ;
    rdfs:label "BT-137-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ID)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_LotIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [

            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:ID";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-SelectionCriteria";
            rr:predicate epo:specifiesSelectionCriterion ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-SelectionCriteria ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../../../../..)";
                    ];
                ] ;
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-SecondStage";
            rr:predicate epo:isSubjectToLotSpecificTerm ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-SecondStage ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-AwardingTerms";
            rr:predicate epo:isSubjectToLotSpecificTerm ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-AwardingTerms ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../..)";
                    ];
                ] ;
        ] .

############################################ND-LotAwardCriterion & ND-LotAwardCriterionParameter##########################################################################################################
#ND-LotAwardCriterion
tedm:ND-AwardingTerms a rr:TriplesMap ;
    rdfs:label "ND-AwardingTerms";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_AwardingTerms_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:AwardCriterion
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-539-Lot";
            rr:predicate epo:hasAwardCriterionType ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-540-Lot";
            rr:predicate epo:hasDescription ;
            rr:objectMap
                [
                    rml:reference "descendant::cac:SubordinateAwardingCriterion/cbc:Description";
                    rr:datatype xsd:string
                ] ;
        ] .


#ND-LotAwardCriterionParameter
tedm:ND-LotAwardCriterionParameter a rr:TriplesMap ;
    rdfs:label "ND-LotAwardCriterionParameter";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_AwardingTerms_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:AwardCriterion
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-120-Lot";
            rr:predicate epo:hasNoNegotiationNecessary ;
            rr:objectMap
                [
                    rml:reference "cbc:NoFurtherNegotiationIndicator";
                    rr:datatype xsd:boolean;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-733-Lot";
            rr:predicate epo:hasAwardCriteriaOrderJustification ;
            rr:objectMap
                [
                    rml:reference "if(exists(cac:AwardingCriterion/cbc:Description)) then cac:AwardingCriterion/cbc:Description else null";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-543-Lot";
            rr:predicate cccev:description ;
            rr:objectMap
                [
                    rml:reference "if(exists(descendant::cbc:CalculationExpression)) then descendant::cbc:CalculationExpression else null";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-734-Lot";
            rr:predicate cccev:name ;
            rr:objectMap
                [
                    rml:reference "if(exists(descendant::cbc:Name)) then descendant::cbc:Name else null";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-541-Lot";
            rr:predicate epo:hasFixedValue ;
            rr:objectMap
                [
                    rml:reference "if(exists(descendant::efbc:ParameterNumeric)) then descendant::efbc:ParameterNumeric else null";
                    rr:datatype xsd:decimal;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5421-Lot";
            rr:predicate cccev:weight;
            rr:objectMap
                [
                    rml:reference "if(exists(descendant::efbc:ParameterCode[@listName='number-weight'])) then descendant::efbc:ParameterCode[@listName='number-weight'] else null";
                    rr:datatype xsd:decimal;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5422-Lot";
            rr:predicate epo:hasFixedValueType;
            rr:objectMap
                [
                    rml:reference "if(exists(descendant::efbc:ParameterCode[@listName='number-fixed'])) then descendant::efbc:ParameterCode[@listName='number-fixed'] else null";
                ] ;
        ]  ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5423-Lot";
            rr:predicate epo:hasConstraint ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotAwardCriterionParameterConstrain ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../../../../../..)";
                    ];
                ] ;
        ] .

#AwardingTerm Constrain
tedm:ND-LotAwardCriterionParameterConstrain a rr:TriplesMap ;
    rdfs:label "BT-5423-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(efbc:ParameterCode[@listName='number-threshold'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_AwardingTermsConstrain_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class cccev:Constraint
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasThresholdValue ;
            rr:objectMap
                [
                    rml:reference "efbc:ParameterCode[@listName='number-threshold']";
                    rr:datatype xsd:decimal;
                ] ;
        ] .
############################################ND-SelectionCriteria & ND-SecondStageCriterionParameter & ND-SecondStage##########################################################################################################
#ND-SelectionCriteria
tedm:ND-SelectionCriteria a rr:TriplesMap ;
    rdfs:label "ND-SelectionCriteria";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_SelectionTerm_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:SelectionTerm
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-747-Lot";
            rr:predicate epo:hasSelectionCriterionType ;
            rr:objectMap
                [
                    rml:reference "cbc:CriterionTypeCode[@listName='selection-criterion']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-749-Lot";
            rr:predicate epo:hasTitle ;
            rr:objectMap
                [
                    rml:reference "cbc:Name";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-750-Lot";
            rr:predicate epo:hasDescription ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-748-Lot";
            rr:predicate epo:hasSelectionCriteriaUsage ;
            rr:objectMap
                [
                    rml:reference "cbc:CalculationExpressionCode[@listName='usage']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-40-Lot";
            rr:predicate epo:isUsedForCandidateRestriction;
            rr:objectMap
                [
                    rml:reference "efbc:SecondStageIndicator";
                    rr:datatype xsd:boolean;
                ] ;
        ] .


tedm:ND-SecondStageCriterionParameter a rr:TriplesMap ;
    rdfs:label "ND-SecondStageCriterionParameter";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_SelectionTerm_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:SelectionTerm
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-752-Lot";
            rr:predicate cccev:type ;
            rr:objectMap
                [
                    rml:reference "descendant::efbc:ParameterNumeric";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-7531-Lot";
            rr:predicate cccev:weight ;
            rr:objectMap
                [
                    rml:reference "descendant::efbc:ParameterCode[@listName='number-weight']";
                    rr:datatype xsd:decimal;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-7532-Lot";
            rr:predicate epo:hasConstraint ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-SecondStageCriterionConstrain ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../.)";
                    ];
                ] ;
        ] .

#Selection Term Constrain
tedm:ND-SecondStageCriterionConstrain a rr:TriplesMap ;
    rdfs:label "BT-7532-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_SelectionTermConstrain_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class cccev:Constraint
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasThresholdValue ;
            rr:objectMap
                [
                    rml:reference "efbc:ParameterCode[@listName='number-threshold']";
                ] ;
        ] .

#ND-SecondStage
tedm:ND-SecondStage a rr:TriplesMap ;
    rdfs:label "ND-SecondStage";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:CandidateReductionConstraintIndicator) or exists(descendant::cbc:LimitationDescription) or exists(descendant::cbc:MaximumQuantity) or exists(descendant::cbc:MinimumQuantity)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_MultipleStageProcedureTerm_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:MultipleStageProcedureTerm
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-52-Lot";
            rr:predicate epo:hasSuccessiveReduction ;
            rr:objectMap
                [
                    rml:reference "cbc:CandidateReductionConstraintIndicator";
                    rr:datatype xsd:boolean
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-661-Lot";
            rr:predicate epo:hasEstimatedTenderInvitationDate ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:LimitationDescription";
                    rr:datatype xsd:integer
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-51-Lot";
            rr:predicate epo:hasMaximumNumberOfCandidates ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:MaximumQuantity";
                    rr:datatype xsd:integer
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-50-Lot";
            rr:predicate epo:hasMinimumNumberOfCandidates ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:MinimumQuantity";
                    rr:datatype xsd:integer
                ] ;
        ] .
#######################################################################ND-ReviewPresentationPeriod##########################################################################################################
#The following two triples maps are for the BT-765 and BT-766 which fall under the ND-LotTenderingTerms
#ND-LotTenderingTerms_FrameworkAgreementTechniqueUsage
tedm:ND-LotTenderingTerms_FrameworkAgreementTechniqueUsage a rr:TriplesMap ;
    rdfs:comment "ND-LotTenderingTerms_FrameworkAgreementTechniqueUsage";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_FrameworkAgreementTechnicalUsage_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:FrameworkAgreementTechniqueUsage
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-765-Lot";
            rr:predicate epo:hasUsage ;
            rr:objectMap
                [
                    rml:reference "cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']";
                ] ;
        ] .

tedm:ND-LotTenderingTerms_DynamicPurchaseSystemTechniqueUsage a rr:TriplesMap ;
    rdfs:comment "ND-LotTenderingTerms_DynamicPurchaseSystemTechniqueUsage";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_DynamicPurchaseSystemTechnicalUsage_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:DynamicPurchaseSystemTechniqueUsage
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-766-Lot";
            rr:predicate epo:hasDPSScope ;
            rr:objectMap
                [
                    rml:reference "cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='dps-usage']";
                ] ;
        ] .

#######################################################################ND-ReviewPresentationPeriod##########################################################################################################
tedm:ND-ReviewPresentationPeriod a rr:TriplesMap ;
    rdfs:label   "ND-ReviewPresentationPeriod";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:PresentationPeriod";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ReviewPresentationPeriod_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:ReviewTerm
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-99-Lot";
            rr:predicate epo:hasReviewDeadlineInformation ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string;
                ] ;
        ] .

#######################################################################ND-FA##########################################################################################################
#ND-FA
tedm:ND-FA a rr:TriplesMap ;
    rdfs:label "ND-FA";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:FrameworkAgreement";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_FrameworkTermAgreement_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:FrameworkAgreementTerm
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-113-Lot";
            rr:predicate epo:hasMaximumParticipantsNumber ;
            rr:objectMap
                [
                    rml:reference "cbc:MaximumOperatorQuantity";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-109-Lot";
            rr:predicate epo:hasDurationExtensionJustification ;
            rr:objectMap
                [
                    rml:reference "cbc:Justification";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-271-Lot";
            rr:predicate epo:hasFrameworkAgreementMaximumValue ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotValueEstimateExtension ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(../../../../../..)";
                    ];
                ] ;
        ] .

#ND-FABuyerCategories
tedm:ND-FABuyerCategories a rr:TriplesMap ;
    rdfs:label "ND-FABuyerCategories";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:FrameworkAgreement/cac:SubsequentProcessTenderRequirement[cbc:Name/text()='buyer-categories']";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_FrameworkTermAgreement_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path(..)) || '?response_type=raw')}" ;
            rr:class epo:FrameworkAgreementTerm
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-111-Lot";
            rr:predicate epo:FrameworkAgreementTerm ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string;
                ] ;
        ].

#ND-LotValueEstimateExtension
tedm:ND-LotValueEstimateExtension a rr:TriplesMap ;
    rdfs:label "BT-271-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RequestedTenderTotal/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_LotValueEstimateExtension_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:MonetaryValue
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "efbc:FrameworkMaximumAmount";
                    rr:datatype xsd:decimal;
                ] ;
        ] .

#######################################################################ND-AuctionTerms####################################################################################################
#EAuction Technical Usage
tedm:ND-AuctionTerms a rr:TriplesMap ;
    rdfs:label "ND-AuctionTerms";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:AuctionTerms";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_AuctionTerms_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:EAuctionTechniqueUsage
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-767-Lot";
            rr:predicate  epo:hasUsage ;
            rr:objectMap
                [
                    rml:reference "cbc:AuctionConstraintIndicator";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-122-Lot";
            rr:predicate epo:hasDescription ;
            rr:objectMap
                [
                    rml:reference "cbc:Description";
                    rr:datatype xsd:string
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-123-Lot";
            rr:predicate epo:hasEAuctionURL ;
            rr:objectMap
                [
                    rml:reference "cbc:AuctionURI";
                    rr:datatype xsd:anyURI
                ] ;
        ] .

###############################################################The following three fall under ND-LotProcurementScope#######################################################################
##But the BTs fall in under different classes that is why we have 3 triples maps for this node
#ND-LotProcurementScope_Lot_Purpose
tedm:ND-LotProcurementScope_Lot_Purpose a rr:TriplesMap ;
    rdfs:comment "ND-Lot-Purpose";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_LotPurpose_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class  epo:Purpose;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-25-Lot and BT-625-Lot";
            rr:predicate epo:hasTotalQuantity ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotProcurementScope_Quantity_Purpose ;
                    rr:joinCondition [
                        rr:child "path(.)";
                        rr:parent "path(.)";
                    ];
                ] ;
        ] .

#This triple map is not considered in the three aforementioned triples maps that define ND-LotProcurementScope, but is a helper triple map for ND-LotProcurementScope_Lot_Purpose
#and it represents the Quantity Purpose
tedm:ND-LotProcurementScope_Quantity_Purpose a rr:TriplesMap ;
    rdfs:label "BT-25-Lot and BT-625-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:EstimatedOverallContractQuantity/@unitCode) or exists(cbc:EstimatedOverallContractQuantity)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_QuantityPurpose_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class  epo:Quantity;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasUnitCode  ;
            rr:objectMap
                [
                    rml:reference "cbc:EstimatedOverallContractQuantity/@unitCode";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasQuantityValue  ;
            rr:objectMap
                [
                    rml:reference "cbc:EstimatedOverallContractQuantity";
                ] ;
        ] .

#ND-LotProcurementScope_Monetary_Value_Lot
tedm:ND-LotProcurementScope_Monetary_Value_Purpose a rr:TriplesMap ;
    rdfs:labele "BT-27-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RequestedTenderTotal";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_MonetaryValueLot_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class  epo:MonetaryValue;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:hasAmountValue ;
            rr:objectMap
                [
                    rml:reference "cbc:EstimatedOverallContractAmount";
                ] ;
        ] .

#ND-LotProcurementScope_Contract_Extension_Contract_Extension
tedm:ND-LotProcurementScope_Contract_Extension a rr:TriplesMap ;
    rdfs:label "ND-OptionsAndRenewals";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(descendant::cbc:OptionsDescription) or exists(descendant::cbc:MaximumNumberNumeric) or exists(cbc:ProcurementTypeCode[@listName='contract-nature']) or exists(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[@listName='contract-nature'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ContractExtension_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class  epo:ContractTerm;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-54-Lot";
            rr:predicate epo:hasOptionsDescription ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:OptionsDescription";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-58-Lot";
            rr:predicate epo:hasMaximumNumberOfRenewals ;
            rr:objectMap
                [
                    rml:reference "descendant::cbc:MaximumNumberNumeric";
                    rr:datatype xsd:integer;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-23-Lot";
            rr:predicate epo:hasContractNatureType  ;
            rr:objectMap
                [
                    rml:reference "cbc:ProcurementTypeCode[@listName='contract-nature']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-531-Lot";
            rr:predicate epo:hasAdditionalContractNature  ;
            rr:objectMap
                [
                    rml:reference "../cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[@listName='contract-nature']";
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "ND-LotPerformanceAddress";
            rr:predicate epo:definesSpecificPlaceOfPerformance ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ND-LotPerformanceAddress ;
                    rr:joinCondition[
                        rr:child "path(.)";
                        rr:parent "path(../.)"
                    ];
                ] ;
        ] .

###############################################################The address of a Lot Contract##############################################################################################
#ND-LotPerformanceAddress
tedm:ND-LotPerformanceAddress a rr:TriplesMap ;
    rdfs:label "ND-LotPerformanceAddress";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ContractLocation_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class dct:Location
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate locn:address ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ContractAddress ;
                    rr:joinCondition[
                        rr:child "path(..)";
                        rr:parent "path(../..)"
                    ];
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5071-Lot";
            rr:predicate epo:hasNutsCode  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:nuts;
                    rr:joinCondition [
                        rr:child "cbc:CountrySubentityCode";
                        rr:parent "code.value";
                    ];
                ] ;
        ];
    rr:predicateObjectMap
        [
            rdfs:label "BT-5141-Lot";
            rr:predicate epo:hasCountryCode  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:country;
                    rr:joinCondition [
                        rr:child "cbc:IdentificationCode";
                        rr:parent "code.value";
                    ];
                ] ;
        ].

tedm:ContractAddress a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation/cac:Address";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_ContractLocationAddress_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class locn:Address
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5101(a)-Lot";
            rr:predicate locn:fullAddress ;
            rr:objectMap
                [
                    rml:reference "cbc:StreetName";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5101(b)-Lot";
            rr:predicate locn:adminUnitL2 ;
            rr:objectMap
                [
                    rml:reference "cbc:AdditionalStreetName";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5101(c)-Lot";
            rr:predicate locn:thoroughfare ;
            rr:objectMap
                [
                    rml:reference "cac:AddressLine/cbc:Line";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5131-Lot";
            rr:predicate locn:addressArea ;
            rr:objectMap
                [
                    rml:reference "cbc:CityName";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5121-Lot";
            rr:predicate locn:postCode ;
            rr:objectMap
                [
                    rml:reference "cbc:PostalZone";
                    rr:datatype xsd:string;
                ] ;
        ] ;
    rr:predicateObjectMap
        [
            rdfs:comment "The identification information of the contract";
            rr:predicate epo:hasID;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:ContractAddressIdentifier;
                    rr:joinCondition [
                        rr:child "path(..)";
                        rr:parent "path(../..)";
                    ];
                ]
        ] .

tedm:ContractAddressIdentifier a rr:TriplesMap ;
    rdfs:comment "The identifier of a contract address";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation/cac:Address/cac:Country";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:IdentificationCode)) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_ContractAddressIdentifier_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-5141-Lot";
            rr:predicate epo:hasIdentifierValue ;
            rr:objectMap
                [
                    rml:reference "cbc:IdentificationCode";
                ] ;
        ] .
###############################################################The following thre fall under ND-LotAdditionalClassification###############################################################
#ND-LotAdditionalClassification_Green_Procurement
tedm:ND-LotAdditionalClassification_Green_Procurement a rr:TriplesMap ;
    rdfs:label "BT-774-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ProcurementTypeCode[@listName='environmental-impact'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_GreenProcurement_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class  epo:GreenProcurement;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:fulfillsRequirement ;
            rr:objectMap
                [
                    rml:reference "cbc:ProcurementTypeCode[@listName='environmental-impact']";
                ] ;
        ] .

#ND-LotAdditionalClassification_Social_Procurement
tedm:ND-LotAdditionalClassification_Social_Procurement a rr:TriplesMap ;
    rdfs:label "BT-775-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ProcurementTypeCode[@listName='social-objective'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_SocialProcurement_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class  epo:SocialProcurement;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:fulfillsRequirement ;
            rr:objectMap
                [
                    rml:reference "cbc:ProcurementTypeCode[@listName='social-objective']";
                ] ;
        ] .

#ND-LotAdditionalClassification_Innovative_Procurement
tedm:ND-LotAdditionalClassification_Innovative_Procurement a rr:TriplesMap ;
    rdfs:label "BT-776-Lot";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType";
            rml:referenceFormulation ql:XPath
        ];
    rr:subjectMap
        [
            rml:reference "if (exists(cbc:ProcurementTypeCode[@listName='innovative-acquisition'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_InnovativeProcurement_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class  epo:InnovativeProcurement;
        ] ;
    rr:predicateObjectMap
        [
            rr:predicate epo:fulfillsRequirement ;
            rr:objectMap
                [
                    rml:reference "cbc:ProcurementTypeCode[@listName='innovative-acquisition']";
                ] ;
        ] .
########################################################################################################################################################################################

#ND-StrategicProcurementType
#tedm:StrategicProcurement a rr:TriplesMap ;
#    rdfs:label "ND-StrategicProcurementType";
#    rml:logicalSource
#        [
#            rml:source "data/source.xml" ;
#            rml:iterator "/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject";
#            rml:referenceFormulation ql:XPath
#        ];
#    rr:subjectMap
#        [
#            rml:reference "if (exists(descendant::cbc:ProcurementTypeCode[@listName='accessibility']) or exists(cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='accessibility']/cbc:ProcurementType) or exists(cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='strategic-procurement']/cbc:ProcurementType) or exists(cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='strategic-procurement']/cbc:ProcurementTypeCode[@listName='strategic-procurement'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_StrategicProcurementType_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
#            rr:class  epo:StrategicProcurement;
#        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-754-Lot";
#            rr:predicate epo:includesAccessibilityCriterion ;
#            rr:objectMap
#                [
#                    rml:reference "descendant::cbc:ProcurementTypeCode[@listName='accessibility']";
#                ] ;
#        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-755-Lot";
#            rr:predicate epo:hasNonAccessibilityCriterionJustification ;
#            rr:objectMap
#                [
#                    rml:reference "cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='accessibility']/cbc:ProcurementType";
#                ] ;
#        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-777-Lot";
#            rr:predicate epo:hasNonAccessibilityCriterionJustification ;
#            rr:objectMap
#                [
#                    rml:reference "cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='strategic-procurement']/cbc:ProcurementType";
#                ] ;
#        ] ;
#    rr:predicateObjectMap
#        [
#            rdfs:label "BT-777-Lot";
#            rr:predicate epo:hasTitle ;
#            rr:objectMap
#                [
#                    rml:reference "cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='strategic-procurement']/cbc:ProcurementTypeCode[@listName='strategic-procurement']";
#                ] ;
#        ] .
##################################################################################################################################################################################################
##################################################################################################################################################################################################
##################################################################################################################################################################################################
#Helper Lists
tedm:buyerLegalType a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "transformation/resources/buyer_legal_type.csv" ;
            rml:referenceFormulation ql:CSV
        ] ;
    rr:subjectMap
        [
            rml:reference
                "conceptURI" ;
        ] .

tedm:nuts a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "transformation/resources/nuts.json" ;
            rml:iterator "$.results.bindings[*]" ;
            rml:referenceFormulation ql:JSONPath
        ] ;
    rr:subjectMap
        [
            rml:reference
                "conceptURI.value" ;
        ] .
tedm:country a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "transformation/resources/country.json" ;
            rml:iterator "$.results.bindings[*]" ;
            rml:referenceFormulation ql:JSONPath
        ] ;
    rr:subjectMap
        [
            rml:reference
                "conceptURI.value" ;
        ] .